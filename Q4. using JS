//deletion in linked list in Javascript
	var head; 
	class Node {
		constructor(val) {
			this.data = val;
			this.next = null;
		}
	}
	function deleteNode(key) {
		// Store head node
		var temp = head, prev = null;
		// If head node itself holds the key to be deleted
		if (temp != null && temp.data == key) {
			head = temp.next; 
			return;
		}
		// Search for the key to be deleted, keep track of
		// the previous node as we need to change temp.next
		while (temp != null && temp.data != key) {
			prev = temp;
			temp = temp.next;
		}
		if (temp == null)
			return;
		prev.next = temp.next;
	}
	/* Inserts a new Node at front of the list. */
	function push(new_data) {
		var new_node = new Node(new_data);
		new_node.next = head;
		head = new_node;
	}
	function printList() {
		tnode = head;
		while (tnode != null) {
			document.write(tnode.data + " ");
			tnode = tnode.next;
		}
	}
		push(7);
		push(1);
		push(3);
		push(2);
		document.write("Created Linked list is:");
		printList();
		deleteNode(1); // Delete node with data 1
		console.log("Linked List after Deletion of 1:");
		printList();

